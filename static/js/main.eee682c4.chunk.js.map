{"version":3,"sources":["components/FeedbackOptions/FeedbackOptions.module.css","components/Statistics/Statistics.module.css","components/Notification/Notification.module.css","components/FeedbackOptions/FeedbackOptions.jsx","components/Statistics/changePropName.js","components/Statistics/Statistics.jsx","components/Section/Section.jsx","components/Notification/Notification.jsx","App.js","index.js"],"names":["module","exports","FeedbackOptions","options","onLeaveFeedback","stateKeys","Object","keys","className","s","list","map","key","id","list__item","type","list__btn","onClick","changePropName","propName","char","toUpperCase","toLowerCase","join","Statistics","props","prop","item","Section","title","children","Notification","message","role","App","useState","good","setGood","neutral","setNeutral","bad","setBad","totalFeedbacks","positivFeedbackPercent","Math","round","stateKey","total","positiveFeedback","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"6IACAA,EAAOC,QAAU,CAAC,WAAa,oCAAoC,KAAO,8BAA8B,UAAY,qC,kBCApHD,EAAOC,QAAU,CAAC,KAAO,yBAAyB,KAAO,2B,iBCAzDD,EAAOC,QAAU,CAAC,QAAU,gC,wJCiCbC,MA9Bf,YAAwD,IAA7BC,EAA4B,EAA5BA,QAASC,EAAmB,EAAnBA,gBAC5BC,EAAYC,OAAOC,KAAKJ,GAC9B,OACE,mCACE,oBAAIK,UAAWC,IAAEC,KAAjB,SACGL,EAAUM,KAAI,SAACC,EAAKC,GAAN,OACb,oBAAIL,UAAWC,IAAEK,WAAjB,SACE,wBACEC,KAAK,SACLP,UAAWC,IAAEO,UACbC,QAAS,kBAAMb,EAAgBQ,IAHjC,SAKGA,KAN6BC,W,wBCF7BK,MARf,SAAwBC,GACtB,OAAO,YAAIA,GACRR,KAAI,SAAAS,GACH,OAAOA,IAASA,EAAKC,cAAd,WAAkCD,EAAKE,eAAkBF,KAEjEG,KAAK,KC6BKC,EA7BI,SAAAC,GACjB,IAAMpB,EAAYC,OAAOC,KAAKkB,GAC9B,OACE,oBAAIjB,UAAWC,IAAEC,KAAjB,SACGL,EAAUM,KAAI,SAAAe,GACb,IAAMP,EAAWD,EAAeQ,GAEhC,OACE,oBAAelB,UAAWC,IAAEkB,KAA5B,SACY,qBAATD,EAAA,UACMP,EADN,cACoBM,EAAMC,IAD1B,UAEMP,EAFN,cAEoBM,EAAMC,GAF1B,OADMA,SCOJE,MAlBf,YAAuC,IAApBC,EAAmB,EAAnBA,MAAOC,EAAY,EAAZA,SACxB,OACE,gCACGD,GAAS,6BAAKA,IACdC,M,gBCSQC,MAZf,YAAoC,IAAZC,EAAW,EAAXA,QACtB,OACE,mBAAGC,KAAK,QAAQzB,UAAWC,IAAEuB,QAA7B,SACGA,K,MCCQ,SAASE,IAOtB,MAAwBC,mBAAS,GAAjC,mBAAOC,EAAP,KAAaC,EAAb,KACA,EAA8BF,mBAAS,GAAvC,mBAAOG,EAAP,KAAgBC,EAAhB,KACA,EAAsBJ,mBAAS,GAA/B,mBAAOK,EAAP,KAAYC,EAAZ,KAiCMC,EARGN,EAAOE,EAAUE,EASpBG,EAJGC,KAAKC,MAAOT,GAAQA,EAAOE,EAAUE,GAAQ,KAMtD,OACE,sBAAKhC,UAAU,MAAf,UACE,cAAC,EAAD,CAASqB,MAAM,wBAAf,SACE,cAAC,EAAD,CACE1B,QAAS,CAAEiC,OAAME,UAASE,OAC1BpC,gBArCc,SAAC0C,GACrB,OAAQA,GACN,IAAK,OACHT,EAAQD,EAAO,GACf,MAEF,IAAK,UACHG,EAAWD,EAAU,GACrB,MAEF,IAAK,MACHG,EAAOD,EAAM,SA8Bf,cAAC,EAAD,CAASX,MAAM,aAAf,SACGa,EACC,cAAC,EAAD,CACEN,KAAMA,EACNE,QAASA,EACTE,IAAKA,EACLO,MAAOL,EACPM,iBAAkBL,IAGpB,cAAC,EAAD,CAAcX,QAAQ,8BCjEhCiB,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.eee682c4.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"list__item\":\"FeedbackOptions_list__item__3hj09\",\"list\":\"FeedbackOptions_list__1BjIR\",\"list__btn\":\"FeedbackOptions_list__btn__6aMUX\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"Statistics_item__JP4_O\",\"list\":\"Statistics_list__2qrbY\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"message\":\"Notification_message__3pQCb\"};","import React from 'react';\nimport s from './FeedbackOptions.module.css';\nimport PropTypes from 'prop-types';\n\nfunction FeedbackOptions({ options, onLeaveFeedback }) {\n  const stateKeys = Object.keys(options);\n  return (\n    <>\n      <ul className={s.list}>\n        {stateKeys.map((key, id) => (\n          <li className={s.list__item} key={id}>\n            <button\n              type=\"button\"\n              className={s.list__btn}\n              onClick={() => onLeaveFeedback(key)}\n            >\n              {key}\n            </button>\n          </li>\n        ))}\n      </ul>\n    </>\n  );\n}\n\nFeedbackOptions.propTypes = {\n  options: PropTypes.shape({\n    good: PropTypes.number.isRequired,\n    neutral: PropTypes.number.isRequired,\n    bad: PropTypes.number.isRequired,\n  }),\n  onLeaveFeedback: PropTypes.func.isRequired,\n};\n\nexport default FeedbackOptions;\n","function changePropName(propName) {\n  return [...propName]\n    .map(char => {\n      return char === char.toUpperCase() ? ` ${char.toLowerCase()}` : char;\n    })\n    .join('');\n}\n\nexport default changePropName;\n","import React from 'react';\nimport s from './Statistics.module.css';\nimport PropTypes from 'prop-types';\nimport changePropName from './changePropName';\n\nconst Statistics = props => {\n  const stateKeys = Object.keys(props);\n  return (\n    <ul className={s.list}>\n      {stateKeys.map(prop => {\n        const propName = changePropName(prop);\n\n        return (\n          <li key={prop} className={s.item}>\n            {prop !== 'positiveFeedback'\n              ? `${propName} : ${props[prop]}`\n              : `${propName} : ${props[prop]} %`}\n          </li>\n        );\n      })}\n    </ul>\n  );\n};\n\nStatistics.propTypes = {\n  props: PropTypes.shape({\n    good: PropTypes.number.isRequired,\n    neutral: PropTypes.number.isRequired,\n    bad: PropTypes.number.isRequired,\n    total: PropTypes.number.isRequired,\n    positiveFeedback: PropTypes.number.isRequired,\n  }),\n};\n\nexport default Statistics;\n","import Proptypes from 'prop-types';\n\nfunction Section({ title, children }) {\n  return (\n    <div>\n      {title && <h2>{title}</h2>}\n      {children}\n    </div>\n  );\n}\n\nSection.propTypes = {\n  title: Proptypes.string,\n};\n\nSection.propTypes = {\n  title: Proptypes.string.isRequired,\n  children: Proptypes.node.isRequired,\n};\n\nexport default Section;\n","import s from './Notification.module.css';\nimport PropTypes from 'prop-types';\n\nfunction Notification({ message }) {\n  return (\n    <p role=\"alert\" className={s.message}>\n      {message}\n    </p>\n  );\n}\n\nNotification.propTypes = {\n  message: PropTypes.string.isRequired,\n};\n\nexport default Notification;\n","import React, { useState } from \"react\";\nimport FeedbackOptions from \"./components/FeedbackOptions\";\nimport Statistics from \"./components/Statistics\";\nimport Section from \"./components/Section\";\nimport Notification from \"./components/Notification\";\nimport \"./App.css\";\n\nexport default function App() {\n  // state = {\n  //   good: 0,\n  //   neutral: 0,\n  //   bad: 0,\n  // };\n\n  const [good, setGood] = useState(0);\n  const [neutral, setNeutral] = useState(0);\n  const [bad, setBad] = useState(0);\n\n  // const countFeedback = (stateKey) => setState((prevState) => (prevState[stateKey] += 1));\n\n  const countFeedback = (stateKey) => {\n    switch (stateKey) {\n      case \"good\":\n        setGood(good + 1);\n        break;\n\n      case \"neutral\":\n        setNeutral(neutral + 1);\n        break;\n\n      case \"bad\":\n        setBad(bad + 1);\n        break;\n\n      default:\n        break;\n    }\n  };\n\n  const countTotalFeedback = () => {\n    // return Object.values(this.state).reduce((acc, item) => acc + item, 0);\n    return good + neutral + bad;\n  };\n\n  const countPositiveFeedbackPercentage = () => {\n    // const { good, neutral, bad } = this.state;\n    return Math.round((good / (good + neutral + bad)) * 100);\n  };\n\n  const totalFeedbacks = countTotalFeedback();\n  const positivFeedbackPercent = countPositiveFeedbackPercentage();\n\n  return (\n    <div className=\"App\">\n      <Section title=\"Please leave feedback\">\n        <FeedbackOptions\n          options={{ good, neutral, bad }}\n          onLeaveFeedback={countFeedback}\n        />\n      </Section>\n\n      <Section title=\"Statistics\">\n        {totalFeedbacks ? (\n          <Statistics\n            good={good}\n            neutral={neutral}\n            bad={bad}\n            total={totalFeedbacks}\n            positiveFeedback={positivFeedbackPercent}\n          />\n        ) : (\n          <Notification message=\"There is no feedback\" />\n        )}\n      </Section>\n    </div>\n  );\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n// import reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n// reportWebVitals();\n"],"sourceRoot":""}